- name: Install ArgoCD and deploy app from ECR
  hosts: master
  gather_facts: false
  vars:
    github_repo_url: "https://github.com/seyoon12/all-terraform-aws-eks-cicd.git"
    github_username: "seyoon12"
    github_token: "{{ lookup('pipe', 'terraform output -raw -state=/terraform/stacks/codepipeline/terraform.tfstate github_oauth_token') }}"
    ecr_registry: # 개인정보
    ecr_repo: "app-ecr"

  tasks:
    - name: Install git using yum directly
      become: true
      shell: apt install -y git

    - name: Install Helm
      shell: curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      become: true

    - name: Add ArgoCD Helm repo
      command: helm repo add argo https://argoproj.github.io/argo-helm
      changed_when: false

    - name: Update Helm repo
      command: helm repo update
      changed_when: false

    - name: Get ECR login password
      shell: aws ecr get-login-password --region ap-northeast-2
      register: ecr_password

    - name: Create imagePullSecret for ECR
      shell: >
        kubectl -n default create secret docker-registry ecr-creds
        --docker-server={{ ecr_registry }}
        --docker-username=AWS
        --docker-password={{ ecr_password.stdout }}
        --docker-email=example@example.com
        --dry-run=client -o yaml | kubectl apply -f -
      ignore_errors: true

    - name: Mark repo as safe Git directory
      shell: git config --global --add safe.directory /home/ubuntu/repo
      
    - name: Clone GitHub repo if not exists
      git:
        repo: "{{ github_repo_url }}"
        dest: ./repo
        version: main
        force: yes

    - name: Read version from version.txt
      command: cat /home/ubuntu/repo/version.txt
      register: version_result # 실행 결과 변수 저장

    - name: Set image tag from version.txt
      set_fact:
        image_tag: "{{ version_result.stdout }}"
        ecr_image: "{{ ecr_registry }}/{{ ecr_repo }}:{{ version_result.stdout }}"

    - name: Ensure manifests directory exists in repo
      file:
        path: ./repo/manifests
        state: directory

    - name: Update container image in deployment.yaml with sed
      shell: |
        sed -i 's|^\(\s*image:\s*\).*|\1{{ ecr_image }}|' ./repo/manifests/example-deployment.yaml
      args:
        executable: /bin/bash

    - name: Commit and push changes to GitHub
      shell: |
        git config --global --add safe.directory /home/ubuntu/repo
        git config user.name "seyoon12"
        git config user.email "wntpqhd1326@gmail.com"
        git add manifests/example-deployment.yaml || true
        git diff --cached --quiet || git commit -m "Update example-deployment.yaml from local"
        git remote set-url origin https://{{ github_token }}@github.com/seyoon12/all-terraform-aws-eks-cicd.git
        git push origin main
      args:
        chdir: ./repo

    - name: Create argocd namespace
      command: kubectl create ns argocd
      args:
        creates: /tmp/argocd-ns-created
      changed_when: false
      failed_when: false

    - name: Create GitHub secret for ArgoCD access
      become: true
      command: >
        kubectl -n argocd create secret generic github-secret
        --from-literal=username={{ github_username }}
        --from-literal=password={{ github_token }}
      ignore_errors: true

    - name: Write values.yaml for ArgoCD
      copy:
        dest: ./argocd-values.yaml
        content: |
          server:
            service:
              type: NodePort
              nodePortHttp: 30030

          configs:
            repositories:
              github-app:
                name: github-app
                type: git
                url: {{ github_repo_url }}
                usernameSecret: {{ github_username }}
                passwordSecret: {{ github_token }}

          secret:
            argocdServerAdminPassword: $2a$12$5lLjTzJZ6akUwTPx1FUzFOF/71Okv7Yy2z4S/71sZTezpN2ZMG7De
            # argocd bcrypt

    - name: Install ArgoCD with values.yaml
      command: >
        helm upgrade --install argocd argo/argo-cd
        -n argocd -f ./argocd-values.yaml
